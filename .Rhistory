bfibl31r = 6 - bfibl31,
bfibl34r = 6 - bfibl34,
bfibl35r = 6 - bfibl35,
bfibl37r = 6 - bfibl37,
bfibl41r = 6 - bfibl41,
bfibl43r = 6 - bfibl43,
extro = mean(c(bfibl1, bfibl6r, bfibl11, bfibl16, bfibl21r, bfibl26, bfibl31r, bfibl36)),
agree = mean(c(bfibl2r, bfibl7, bfibl12r, bfibl17, bfibl22, bfibl27r, bfibl32, bfibl37r, bfibl42)),
conci = mean(c(bfibl3, bfibl8r, bfibl13, bfibl18r, bfibl23r, bfibl28, bfibl33, bfibl38, bfibl43r)),
neuro = mean(c(bfibl4, bfibl9r, bfibl14, bfibl19, bfibl24r, bfibl29, bfibl34r, bfibl39)),
open = mean(c(bfibl5, bfibl10, bfibl15, bfibl20, bfibl25, bfibl30, bfibl35r, bfibl40, bfibl40, bfibl41r, bfibl44)), na.rm = T)
total <- total %>% rowwise() %>% mutate(bfi12m2r = 6 - bfi12m2,
bfi12m6r = 6 - bfi12m6,
bfi12m8r = 6 - bfi12m8,
bfi12m9r = 6 - bfi12m9,
bfi12m12r = 6 - bfi12m12,
bfi12m18r = 6 - bfi12m18,
bfi12m21r = 6 - bfi12m21,
bfi12m23r = 6 - bfi12m23,
bfi12m24r = 6 - bfi12m24,
bfi12m27r = 6 - bfi12m27,
bfi12m31r = 6 - bfi12m31,
bfi12m34r = 6 - bfi12m34,
bfi12m35r = 6 - bfi12m35,
bfi12m37r = 6 - bfi12m37,
bfi12m41r = 6 - bfi12m41,
bfi12m43r = 6 - bfi12m43,
extro12m = mean(c(bfi12m1, bfi12m6r, bfi12m11, bfi12m16, bfi12m21r, bfi12m26, bfi12m31r, bfi12m36)),
agree12m = mean(c(bfi12m2r, bfi12m7, bfi12m12r, bfi12m17, bfi12m22, bfi12m27r, bfi12m32, bfi12m37r, bfi12m42)),
conci12m = mean(c(bfi12m3, bfi12m8r, bfi12m13, bfi12m18r, bfi12m23r, bfi12m28, bfi12m33, bfi12m38, bfi12m43r)),
neuro12m = mean(c(bfi12m4, bfi12m9r, bfi12m14, bfi12m19, bfi12m24r, bfi12m29, bfi12m34r, bfi12m39)),
open12m = mean(c(bfi12m5, bfi12m10, bfi12m15, bfi12m20, bfi12m25, bfi12m30, bfi12m35r, bfi12m40, bfi12m40, bfi12m41r, bfi12m44)), na.rm = T)
#self-esteem#
total <- total %>% rowwise() %>% mutate(sebl2r = 8 - sebl2,
sebl5r = 8 - sebl5,
sebl7r = 8 - sebl7,
sebl8r = 8 - sebl8,
se = mean(c(sebl1, sebl2r, sebl3, sebl4, sebl5r, sebl6, sebl7r, sebl8r, sebl9)), na.rm = T)
total <- total %>% rowwise() %>% mutate(se12m2r = 8 - se12m2,
se12m5r = 8 - se12m5,
se12m7r = 8 - se12m7,
se12m8r = 8 - se12m8,
se12m = mean(c(se12m1, se12m2r, se12m3, se12m4, se12m5r, se12m6, se12m7r, se12m8r, se12m9)), na.rm = T)
write.csv(total, file = "scored.csv")
scored <- read.csv("/Users/reesetou/Documents/Dissertation/scored.csv")
install.packages("DiagrammeR")
grViz("
digraph boxes_and_circles {
# a 'graph' statement
graph [overlap = true, fontsize = 10]
# several 'node' statements
node [shape = box,
fontname = Helvetica]
A; B; C; D; E; F
node [shape = circle,
fixedsize = true,
width = 0.9] // sets as circles
1; 2; 3; 4; 5; 6; 7; 8
# several 'edge' statements
A->1 B->2 B->3 B->4 C->A
1->D E->A 2->4 1->5 1->F
E->6 4->6 5->7 6->7 3->8
}
")
rm(list=ls())
iv_df <- read.csv(iv)
dv <- '0bf8bc6e-30d0-4c50-956a-603fc693d966.csv'
dv_df <- read.csv(dv)
iv <- '4910797b-ee55-40a7-8668-10efd5c1b960.csv'
iv_df <- read.csv(iv)
dv <- '..\0bf8bc6e-30d0-4c50-956a-603fc693d966.csv'
dv <- '..\0bf8bc6e-30d0-4c50-956a-603fc693d966.csv'
dv <- '../0bf8bc6e-30d0-4c50-956a-603fc693d966.csv'
dv_df <- read.csv(dv)
dv <- '/0bf8bc6e-30d0-4c50-956a-603fc693d966.csv'
dv_df <- read.csv(dv)
dv <- '/Users/reesetou/Tanzania/0bf8bc6e-30d0-4c50-956a-603fc693d966.csv'
dv_df <- read.csv(dv)
iv <- '/4910797b-ee55-40a7-8668-10efd5c1b960.csv'
iv_df <- read.csv(iv)
iv <- '.../4910797b-ee55-40a7-8668-10efd5c1b960.csv'
iv_df <- read.csv(iv)
iv <- './4910797b-ee55-40a7-8668-10efd5c1b960.csv'
iv_df <- read.csv(iv)
iv <- '/Users/reesetou/Tanzania/4910797b-ee55-40a7-8668-10efd5c1b960.csv'
iv_df <- read.csv(iv)
View(iv_df)
train <- merge(iv_df, dv_df)
View(train)
str(train)
summary(str(train))
library(ggplot2)
ggplot(data = train, aes = (amount_tsh, status_group))
library(ggplot2)
ggplot(data = train, aes (amount_tsh, status_group))
ggplot(data = train, aes (amount_tsh, status_group)) + geom_jitter(height = 2, width = 2)
cor(train, method = "pearson", use = "complete.obs")
df_cont = train(str(train) = int | str(train) = num)
df_cont = train(str(train) == int | str(train) == num)
cor(train[sapply(train, function(x) !is.factor(x))])
library(ggplot2)
ggplot(data = train, aes(status_group, amount_tsh)) + geom_col()
ggplot(data = train, aes(status_group, gps_height)) + geom_col()
ggplot(data = train, aes(gps_height)) + geom_point(color = status_group)
ggplot(data = train, aes(gps_height)) + geom_point(color = status_group)
ggplot(data = train, aes(gps_height)) + geom_point(color = train$status_group)
ggplot(data = train, aes(status_group, gps_height)) + geom_point(color = train$status_group, y = train$gps_height)
ggplot(data = train, aes(status_group, gps_height)) + geom_jitter(height = 2, width = 2)
ggplot(data = train, aes(gps_height, status_group)) + geom_jitter(height = 2, width = 2)
train$status_group_cont <- NA
train$status_group_cont[train$status_group == 'non functional'] <- 0
train$status_group_cont[train$status_group == 'functional needs repair'] <- 1
train$status_group_cont[train$status_group == 'functional'] <- 2
View(train)
View(train)
cor(train[sapply(train, function(x) !is.factor(x))])
View(train)
View(train)
cor_tab_num <- cor(train[sapply(train, function(x) !is.factor(x))])
cor_tab_num[1]
cor_tab_num[:, -1]
cor_tab_num[, -1]
cor_tab_num$status_group_cont
View(cor_tab_num)
View(cor_tab_num)
library(ggplot2)
ggplot(data = train, aes(y = status_group)) + geom_bar()
library(ggplot2)
ggplot(data = train, aes(status_group)) + geom_bar()
ggplot(data = train, aes(status_group)) + geom_bar(color = basin)
ggplot(data = train, aes(status_group)) + geom_bar(color = train$basin)
ggplot(data = train, aes(status_group)) + geom_bar()
install.packages("gmodels")
library(gmodels)
cat_table_basin <- CrossTable(train$basin, train$status_group, chisq = TRUE)
cat_table_basin <- CrossTable(train$status_group, train$basin, chisq = TRUE)
CrossTable(train$status_group, train$basin, chisq = TRUE)
train_cat <- train[sapply(train, function(x) is.factor(x))]
View(train_cat)
View(dv_df)
View(dv_df)
cat_table_basin <- CrossTable(train$status_group, train$basin, chisq = TRUE)
str(cat_table_basin)
cat_table_basin$chisq$p.value
train_cat <- train[sapply(train, function(x) is.factor(x))]
for (col in train_cat) {'cat_table_' + col <- CrossTable(train$status_group, train$col, chisq = TRUE)}
for (col in train_cat) {CrossTable(train$status_group, train$col, chisq = TRUE)}
train_cat <- train[sapply(train, function(x) is.factor(x))]
for (col in names(train_cat)) {CrossTable(train$status_group, train$col, chisq = TRUE)}
for (col in names(train_cat)){
CrossTable(train$status_group, train[paste[col]], chisq = TRUE)
}
for (col in names(train_cat)){
CrossTable(train$status_group, train[[paste(col)]], chisq = TRUE)
}
for (col in names(train_cat)){
col <- CrossTable(train$status_group, train[[paste(col)]], chisq = TRUE)
print(paste(col, ':', col$chisq$p.value))
}
View(train_cat)
View(train_cat)
library(ggplot2)
ggplot(data = train, aes(status_group)) + geom_bar()
library(ggplot2)
status_bar <- ggplot(data = train, aes(status_group)) + geom_bar()
status_bar + geom(aes(fill = source_class))
library(ggplot2)
status_bar <- ggplot(data = train, aes(status_group)) + geom_bar()
status_bar + geom_bar(aes(fill = source_class))
library(ggplot2)
status_bar <- ggplot(data = train, aes(status_group)) + geom_bar()
status_bar + geom_bar(aes(fill = waterpoint_type))
status_bar <- ggplot(data = train, aes(status_group)) + geom_bar()
status_bar + geom_bar(aes(fill = waterpoint_type), position = 'dodge')
status_bar <- ggplot(data = train, aes(status_group))
status_bar <- ggplot(data = train, aes(status_group))
status_bar + geom_bar(aes(fill = waterpoint_type), position = 'fill')
status_bar <- ggplot(data = train, aes(x = status_group, y = ..density..))
status_bar + geom_bar(aes(fill = waterpoint_type), position = 'fill')
library(ggplot2)
status_bar <- ggplot(data = train, aes(x = status_group, y = ..density..))
status_bar + geom_histogram(aes(fill = waterpoint_type), position = 'fill')
library(ggplot2)
status_bar <- ggplot(data = train, aes(x = status_group, stat = ..density..))
status_bar + geom_histogram(aes(fill = waterpoint_type), position = 'fill')
library(ggplot2)
status_bar <- ggplot(data = train, aes(x = status_group, stat = ..density..))
status_bar + geom_bar(aes(fill = waterpoint_type), position = 'fill')
status_bar <- ggplot(data = train, aes(status_group))
status_bar + geom_bar(aes(fill = waterpoint_type), position = 'fill')
status_bar <- ggplot(data = train, aes(status_group))
status_bar + geom_bar(aes(fill = waterpoint_type), position = 'fill', alpha = 0.5)
status_bar <- ggplot(data = train, aes(status_group))
status_bar + geom_bar(aes(fill = waterpoint_type), position = 'fill', alpha = 0.7)
status_bar <- ggplot(data = train, aes(status_group))
status_bar + geom_bar(aes(fill = waterpoint_type), position = 'fill', alpha = 0.9)
status_bar <- ggplot(data = train, aes(status_group))
status_bar + geom_bar(aes(fill = waterpoint_type), position = 'fill', alpha = 0.85)
status_bar <- ggplot(data = train, aes(status_group))
status_bar + geom_bar(aes(fill = waterpoint_type), position = 'fill', alpha = 0.85) + scale_color_brewer()
status_bar <- ggplot(data = train, aes(status_group))
status_bar + geom_bar(aes(fill = waterpoint_type), position = 'fill', alpha = 0.85) + scale_fill_brewer()
status_bar <- ggplot(data = train, aes(status_group))
status_bar + geom_bar(aes(fill = waterpoint_type), position = 'fill') + scale_fill_brewer()
str(train$installer)
str(train$basin)
status_bar + geom_bar(aes(fill = basin), position = 'fill') + scale_fill_brewer()
library(ggplot2)
library(scales)
library(grid)
library(gridExtra)
setwd('/Users/reesetou/hospital-ranking-and-twitter')
# sentiment analysis for institutional accounts
graph_inst <- function(rank, hostpial_name){
filename <- paste('./sent_processed_data/inst_tweets_', toString(rank), '.csv', sep = '')
data <- read.csv(file = filename, header = TRUE, sep = ',')
plot <- ggplot(data, aes(x = Sentiment, fill = Sentiment)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
labs(title = hostpial_name, x = 'Sentiment', y = 'Percentage') +
theme(plot.title = element_text(size = 9, face = 'bold'),
axis.title.x = element_blank()) +
guides(fill = FALSE) +
scale_y_continuous(limits = c(0.0, 0.7)) +
scale_fill_manual(values=c("#999999", "#E69F00", "#56B4E9"))
return(plot)
}
plot1 <- graph_inst(1, '#1 Mayo Clinic, Rochester, Minn.')
plot2 <- graph_inst(2, '#2 Cleveland Clinic') + theme(axis.title.y = element_blank())
plot3 <- graph_inst(3, '#3 Johns Hopkins Hospital, Baltimore') + theme(axis.title.y = element_blank())
plot4 <- graph_inst(4, '#4 Massachusetts General Hospital, \n Boston') + theme(axis.title.y = element_blank())
plot5 <- graph_inst(5, '#5 UCSF Medical Center, San \n Francisco') + theme(axis.title.y = element_blank())
plot6 <- graph_inst(6, '#6 University of Michigan \n Hospitals and Health Centers, \n Ann Arbor')
plot8 <- graph_inst(8, '#8 New York-Presbyterian Hospital, \n N.Y.') + theme(axis.title.y = element_blank())
plot9 <- graph_inst(9, '#9 Stanford Health Care-Stanford \n Hospital, Stanford, Calif.') + theme(axis.title.y = element_blank())
plot10 <- graph_inst(10, '#10 Hospitals of the University of \n Pennsylvania-Penn Presbyterian, \n Philadelphia') + theme(axis.title.y = element_blank())
plot12 <- graph_inst(12, '#12 Barnes-Jewish Hospital, \n St. Louis') + theme(axis.title.y = element_blank())
plot13 <- graph_inst(13, '#13 Northwestern Memorial \n Hospital, Chicago')
plot14 <- graph_inst(14, '#14 UPMC Presbyterian Shadyside, \n Pittsburgh') + theme(axis.title.y = element_blank())
plot15 <- graph_inst(15, '#15 University of Colorado Hospital, \n Aurora') + theme(axis.title.y = element_blank())
plot16 <- graph_inst(16, '#16 Thomas Jefferson University \n Hospitals, Philadelphia') + theme(axis.title.y = element_blank())
plot17 <- graph_inst(17, '#17 Duke University Hospital, \n Durham, N.C.') + theme(axis.title.y = element_blank())
plot18 <- graph_inst(18, '#18 Mount Sinai Hospital, New \n York')
plot19 <- graph_inst(19, '#19 NYU Langone Medical Center, \n New York') + theme(axis.title.y = element_blank())
plot20 <- graph_inst(20, '#20 Mayo Clinic Phoenix') + theme(axis.title.y = element_blank())
grid.arrange(plot1, plot2, plot3, plot4, plot5,
plot6, plot8, plot9, plot10, plot12,
plot13, plot14, plot15, plot16, plot17,
plot18, plot19, plot20,
ncol = 5, nrow = 4,
top = textGrob("Sentiment of the Tweets Posted by Institutional Accounts (in Percentage)", gp = gpar(fontsize = 20)))
g <- arrangeGrob(plot1, plot2, plot3, plot4, plot5,
plot6, plot8, plot9, plot10, plot12,
plot13, plot14, plot15, plot16, plot17,
plot18, plot19, plot20,
ncol = 5, nrow = 4)
ggsave(file="./sent_inst_r_test.png", g, width = 15, height= 12, units = 'in', limitsize = FALSE, device = 'png')
# sentiment analysis for institutional accounts
graph_inst <- function(rank, hostpial_name){
filename <- paste('./sent_processed_data/inst_tweets_', toString(rank), '.csv', sep = '')
data <- read.csv(file = filename, header = TRUE, sep = ',')
plot <- ggplot(data, aes(x = Sentiment, fill = Sentiment)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
labs(title = hostpial_name, x = 'Sentiment', y = 'Percentage') +
theme(plot.title = element_text(size = 9, face = 'bold'),
axis.title.x = element_blank()) +
guides(fill = FALSE) +
scale_y_continuous(limits = c(0.0, 0.7)) +
scale_fill_manual(values=c("#AB0032", "#8E8F90", "#69813A"))
return(plot)
}
plot1 <- graph_inst(1, '#1 Mayo Clinic, Rochester, Minn.')
plot2 <- graph_inst(2, '#2 Cleveland Clinic') + theme(axis.title.y = element_blank())
plot3 <- graph_inst(3, '#3 Johns Hopkins Hospital, Baltimore') + theme(axis.title.y = element_blank())
plot4 <- graph_inst(4, '#4 Massachusetts General Hospital, \n Boston') + theme(axis.title.y = element_blank())
plot5 <- graph_inst(5, '#5 UCSF Medical Center, San \n Francisco') + theme(axis.title.y = element_blank())
plot6 <- graph_inst(6, '#6 University of Michigan \n Hospitals and Health Centers, \n Ann Arbor')
plot8 <- graph_inst(8, '#8 New York-Presbyterian Hospital, \n N.Y.') + theme(axis.title.y = element_blank())
plot9 <- graph_inst(9, '#9 Stanford Health Care-Stanford \n Hospital, Stanford, Calif.') + theme(axis.title.y = element_blank())
plot10 <- graph_inst(10, '#10 Hospitals of the University of \n Pennsylvania-Penn Presbyterian, \n Philadelphia') + theme(axis.title.y = element_blank())
plot12 <- graph_inst(12, '#12 Barnes-Jewish Hospital, \n St. Louis') + theme(axis.title.y = element_blank())
plot13 <- graph_inst(13, '#13 Northwestern Memorial \n Hospital, Chicago')
plot14 <- graph_inst(14, '#14 UPMC Presbyterian Shadyside, \n Pittsburgh') + theme(axis.title.y = element_blank())
plot15 <- graph_inst(15, '#15 University of Colorado Hospital, \n Aurora') + theme(axis.title.y = element_blank())
plot16 <- graph_inst(16, '#16 Thomas Jefferson University \n Hospitals, Philadelphia') + theme(axis.title.y = element_blank())
plot17 <- graph_inst(17, '#17 Duke University Hospital, \n Durham, N.C.') + theme(axis.title.y = element_blank())
plot18 <- graph_inst(18, '#18 Mount Sinai Hospital, New \n York')
plot19 <- graph_inst(19, '#19 NYU Langone Medical Center, \n New York') + theme(axis.title.y = element_blank())
plot20 <- graph_inst(20, '#20 Mayo Clinic Phoenix') + theme(axis.title.y = element_blank())
grid.arrange(plot1, plot2, plot3, plot4, plot5,
plot6, plot8, plot9, plot10, plot12,
plot13, plot14, plot15, plot16, plot17,
plot18, plot19, plot20,
ncol = 5, nrow = 4,
top = textGrob("Sentiment of the Tweets Posted by Institutional Accounts (in Percentage)", gp = gpar(fontsize = 20)))
g <- arrangeGrob(plot1, plot2, plot3, plot4, plot5,
plot6, plot8, plot9, plot10, plot12,
plot13, plot14, plot15, plot16, plot17,
plot18, plot19, plot20,
ncol = 5, nrow = 4)
ggsave(file="./sent_inst_r_test.png", g, width = 15, height= 12, units = 'in', limitsize = FALSE, device = 'png')
# sentiment analysis for institutional accounts
graph_inst <- function(rank, hostpial_name){
filename <- paste('./sent_processed_data/inst_tweets_', toString(rank), '.csv', sep = '')
data <- read.csv(file = filename, header = TRUE, sep = ',')
plot <- ggplot(data, aes(x = Sentiment, fill = Sentiment)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
labs(title = hostpial_name, x = 'Sentiment', y = 'Percentage') +
theme(plot.title = element_text(size = 9, face = 'bold'),
axis.title.x = element_blank()) +
guides(fill = FALSE) +
scale_y_continuous(limits = c(0.0, 0.7)) +
scale_fill_manual(values=c("#AB0032", "#8E8F90", "#007078"))
return(plot)
}
plot1 <- graph_inst(1, '#1 Mayo Clinic, Rochester, Minn.')
plot2 <- graph_inst(2, '#2 Cleveland Clinic') + theme(axis.title.y = element_blank())
plot3 <- graph_inst(3, '#3 Johns Hopkins Hospital, Baltimore') + theme(axis.title.y = element_blank())
plot4 <- graph_inst(4, '#4 Massachusetts General Hospital, \n Boston') + theme(axis.title.y = element_blank())
plot5 <- graph_inst(5, '#5 UCSF Medical Center, San \n Francisco') + theme(axis.title.y = element_blank())
plot6 <- graph_inst(6, '#6 University of Michigan \n Hospitals and Health Centers, \n Ann Arbor')
plot8 <- graph_inst(8, '#8 New York-Presbyterian Hospital, \n N.Y.') + theme(axis.title.y = element_blank())
plot9 <- graph_inst(9, '#9 Stanford Health Care-Stanford \n Hospital, Stanford, Calif.') + theme(axis.title.y = element_blank())
plot10 <- graph_inst(10, '#10 Hospitals of the University of \n Pennsylvania-Penn Presbyterian, \n Philadelphia') + theme(axis.title.y = element_blank())
plot12 <- graph_inst(12, '#12 Barnes-Jewish Hospital, \n St. Louis') + theme(axis.title.y = element_blank())
plot13 <- graph_inst(13, '#13 Northwestern Memorial \n Hospital, Chicago')
plot14 <- graph_inst(14, '#14 UPMC Presbyterian Shadyside, \n Pittsburgh') + theme(axis.title.y = element_blank())
plot15 <- graph_inst(15, '#15 University of Colorado Hospital, \n Aurora') + theme(axis.title.y = element_blank())
plot16 <- graph_inst(16, '#16 Thomas Jefferson University \n Hospitals, Philadelphia') + theme(axis.title.y = element_blank())
plot17 <- graph_inst(17, '#17 Duke University Hospital, \n Durham, N.C.') + theme(axis.title.y = element_blank())
plot18 <- graph_inst(18, '#18 Mount Sinai Hospital, New \n York')
plot19 <- graph_inst(19, '#19 NYU Langone Medical Center, \n New York') + theme(axis.title.y = element_blank())
plot20 <- graph_inst(20, '#20 Mayo Clinic Phoenix') + theme(axis.title.y = element_blank())
grid.arrange(plot1, plot2, plot3, plot4, plot5,
plot6, plot8, plot9, plot10, plot12,
plot13, plot14, plot15, plot16, plot17,
plot18, plot19, plot20,
ncol = 5, nrow = 4,
top = textGrob("Sentiment of the Tweets Posted by Institutional Accounts (in Percentage)", gp = gpar(fontsize = 20)))
g <- arrangeGrob(plot1, plot2, plot3, plot4, plot5,
plot6, plot8, plot9, plot10, plot12,
plot13, plot14, plot15, plot16, plot17,
plot18, plot19, plot20,
ncol = 5, nrow = 4)
ggsave(file="./sent_inst_r_test.png", g, width = 15, height= 12, units = 'in', limitsize = FALSE, device = 'png')
graph_indi <- function(rank, hostpial_name){
filename <- paste('./sent_processed_data/indi_tweets_', toString(rank), '.csv', sep = '')
data <- read.csv(file = filename, header = TRUE, sep = ',')
plot <- ggplot(data, aes(x = Sentiment, fill = Sentiment)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
labs(title = hostpial_name, x = 'Sentiment', y = 'Percentage') +
theme(plot.title = element_text(size = 9, face = 'bold'),
axis.title.x = element_blank()) +
guides(fill = FALSE) +
scale_y_continuous(limits = c(0.0, 0.8)) +
scale_fill_manual(values=c("#AB0032", "#8E8F90", "#007078"))
return(plot)
}
plot1 <- graph_indi(1, '#1 Mayo Clinic, Rochester, Minn.')
plot2 <- graph_indi(2, '#2 Cleveland Clinic') + theme(axis.title.y = element_blank())
plot3 <- graph_indi(3, '#3 Johns Hopkins Hospital, Baltimore') + theme(axis.title.y = element_blank())
plot4 <- graph_indi(4, '#4 Massachusetts General Hospital, \n Boston') + theme(axis.title.y = element_blank())
plot5 <- graph_indi(5, '#5 UCSF Medical Center, San \n Francisco') + theme(axis.title.y = element_blank())
plot6 <- graph_indi(6, '#6 University of Michigan \n Hospitals and Health Centers, \n Ann Arbor')
plot7 <- graph_indi(7, '#7 Ronald Reagan UCLA Medical \n Center, Los Angeles') + theme(axis.title.y = element_blank())
plot9 <- graph_indi(9, '#9 Stanford Health Care-Stanford \n Hospital, Stanford, Calif.') + theme(axis.title.y = element_blank())
plot10 <- graph_indi(10, '#10 Hospitals of the University of \n Pennsylvania-Penn Presbyterian, \n Philadelphia') + theme(axis.title.y = element_blank())
plot11 <- graph_indi(11, '#11 Cedars-Sinai Medical Center, \n Los Angeles') + theme(axis.title.y = element_blank())
plot12 <- graph_indi(12, '#12 Barnes-Jewish Hospital, \n St. Louis')
plot14 <- graph_indi(14, '#14 UPMC Presbyterian Shadyside, \n Pittsburgh') + theme(axis.title.y = element_blank())
plot15 <- graph_indi(15, '#15 University of Colorado Hospital, \n Aurora') + theme(axis.title.y = element_blank())
plot16 <- graph_indi(16, '#16 Thomas Jefferson University \n Hospitals, Philadelphia') + theme(axis.title.y = element_blank())
plot17 <- graph_indi(17, '#17 Duke University Hospital, \n Durham, N.C.') + theme(axis.title.y = element_blank())
plot18 <- graph_indi(18, '#18 Mount Sinai Hospital, \n New York')
plot19 <- graph_indi(19, '#19 NYU Langone Medical Center, \n New York') + theme(axis.title.y = element_blank())
plot20 <- graph_indi(20, '#20 Mayo Clinic Phoenix') + theme(axis.title.y = element_blank())
grid.arrange(plot1, plot2, plot3, plot4, plot5,
plot6, plot7, plot9, plot10, plot11,
plot12, plot14, plot15, plot16, plot17,
plot18, plot19, plot20,
ncol = 5, nrow = 4,
top = textGrob("Sentiment of the Tweets Posted by Individual Accounts (in Percentage)", gp = gpar(fontsize = 20)))
g <- arrangeGrob(plot1, plot2, plot3, plot4, plot5,
plot6, plot7, plot9, plot10, plot11,
plot12, plot14, plot15, plot16, plot17,
plot18, plot19, plot20,
ncol = 5, nrow = 4)
graph_inst <- function(rank, hostpial_name){
filename <- paste('./sent_processed_data/inst_tweets_', toString(rank), '.csv', sep = '')
data <- read.csv(file = filename, header = TRUE, sep = ',')
plot <- ggplot(data, aes(x = Objectivity, fill = Objectivity)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
labs(title = hostpial_name, x = 'Objectivity', y = 'Percentage') +
theme(plot.title = element_text(size = 9, face = 'bold'),
axis.title.x = element_blank()) +
guides(fill = FALSE) +
scale_y_continuous(limits = c(0.0, 1.0)) +
scale_fill_manual(values=c("#AB0032", "#007078"))
return(plot)
}
plot1 <- graph_inst(1, '#1 Mayo Clinic, Rochester, Minn.')
plot2 <- graph_inst(2, '#2 Cleveland Clinic') + theme(axis.title.y = element_blank())
plot3 <- graph_inst(3, '#3 Johns Hopkins Hospital, Baltimore') + theme(axis.title.y = element_blank())
plot4 <- graph_inst(4, '#4 Massachusetts General Hospital, \n Boston') + theme(axis.title.y = element_blank())
plot5 <- graph_inst(5, '#5 UCSF Medical Center, San \n Francisco') + theme(axis.title.y = element_blank())
plot6 <- graph_inst(6, '#6 University of Michigan \n Hospitals and Health Centers, \n Ann Arbor')
plot8 <- graph_inst(8, '#8 New York-Presbyterian Hospital, \n N.Y.') + theme(axis.title.y = element_blank())
plot9 <- graph_inst(9, '#9 Stanford Health Care-Stanford \n Hospital, Stanford, Calif.') + theme(axis.title.y = element_blank())
plot10 <- graph_inst(10, '#10 Hospitals of the University of \n Pennsylvania-Penn Presbyterian, \n Philadelphia') + theme(axis.title.y = element_blank())
plot12 <- graph_inst(12, '#12 Barnes-Jewish Hospital, \n St. Louis') + theme(axis.title.y = element_blank())
plot13 <- graph_inst(13, '#13 Northwestern Memorial \n Hospital, Chicago')
plot14 <- graph_inst(14, '#14 UPMC Presbyterian Shadyside, \n Pittsburgh') + theme(axis.title.y = element_blank())
plot15 <- graph_inst(15, '#15 University of Colorado Hospital, \n Aurora') + theme(axis.title.y = element_blank())
plot16 <- graph_inst(16, '#16 Thomas Jefferson University \n Hospitals, Philadelphia') + theme(axis.title.y = element_blank())
plot17 <- graph_inst(17, '#17 Duke University Hospital, \n Durham, N.C.') + theme(axis.title.y = element_blank())
plot18 <- graph_inst(18, '#18 Mount Sinai Hospital, New \n York')
plot19 <- graph_inst(19, '#19 NYU Langone Medical Center, \n New York') + theme(axis.title.y = element_blank())
plot20 <- graph_inst(20, '#20 Mayo Clinic Phoenix') + theme(axis.title.y = element_blank())
grid.arrange(plot1, plot2, plot3, plot4, plot5,
plot6, plot8, plot9, plot10, plot12,
plot13, plot14, plot15, plot16, plot17,
plot18, plot19, plot20,
ncol = 5, nrow = 4,
top = textGrob("Subjectivity of the Tweets Posted by Institutional Accounts (in Percentage)", gp = gpar(fontsize = 20)))
g <- arrangeGrob(plot1, plot2, plot3, plot4, plot5,
plot6, plot8, plot9, plot10, plot12,
plot13, plot14, plot15, plot16, plot17,
plot18, plot19, plot20,
ncol = 5, nrow = 4)
graph_inst <- function(rank, hostpial_name){
filename <- paste('./sent_processed_data/inst_tweets_', toString(rank), '.csv', sep = '')
data <- read.csv(file = filename, header = TRUE, sep = ',')
plot <- ggplot(data, aes(x = Objectivity, fill = Objectivity)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
labs(title = hostpial_name, x = 'Objectivity', y = 'Percentage') +
theme(plot.title = element_text(size = 9, face = 'bold'),
axis.title.x = element_blank()) +
guides(fill = FALSE) +
scale_y_continuous(limits = c(0.0, 1.0)) +
scale_fill_manual(values=c("#007078", "#AB0032"))
return(plot)
}
plot1 <- graph_inst(1, '#1 Mayo Clinic, Rochester, Minn.')
plot2 <- graph_inst(2, '#2 Cleveland Clinic') + theme(axis.title.y = element_blank())
plot3 <- graph_inst(3, '#3 Johns Hopkins Hospital, Baltimore') + theme(axis.title.y = element_blank())
plot4 <- graph_inst(4, '#4 Massachusetts General Hospital, \n Boston') + theme(axis.title.y = element_blank())
plot5 <- graph_inst(5, '#5 UCSF Medical Center, San \n Francisco') + theme(axis.title.y = element_blank())
plot6 <- graph_inst(6, '#6 University of Michigan \n Hospitals and Health Centers, \n Ann Arbor')
plot8 <- graph_inst(8, '#8 New York-Presbyterian Hospital, \n N.Y.') + theme(axis.title.y = element_blank())
plot9 <- graph_inst(9, '#9 Stanford Health Care-Stanford \n Hospital, Stanford, Calif.') + theme(axis.title.y = element_blank())
plot10 <- graph_inst(10, '#10 Hospitals of the University of \n Pennsylvania-Penn Presbyterian, \n Philadelphia') + theme(axis.title.y = element_blank())
plot12 <- graph_inst(12, '#12 Barnes-Jewish Hospital, \n St. Louis') + theme(axis.title.y = element_blank())
plot13 <- graph_inst(13, '#13 Northwestern Memorial \n Hospital, Chicago')
plot14 <- graph_inst(14, '#14 UPMC Presbyterian Shadyside, \n Pittsburgh') + theme(axis.title.y = element_blank())
plot15 <- graph_inst(15, '#15 University of Colorado Hospital, \n Aurora') + theme(axis.title.y = element_blank())
plot16 <- graph_inst(16, '#16 Thomas Jefferson University \n Hospitals, Philadelphia') + theme(axis.title.y = element_blank())
plot17 <- graph_inst(17, '#17 Duke University Hospital, \n Durham, N.C.') + theme(axis.title.y = element_blank())
plot18 <- graph_inst(18, '#18 Mount Sinai Hospital, New \n York')
plot19 <- graph_inst(19, '#19 NYU Langone Medical Center, \n New York') + theme(axis.title.y = element_blank())
plot20 <- graph_inst(20, '#20 Mayo Clinic Phoenix') + theme(axis.title.y = element_blank())
grid.arrange(plot1, plot2, plot3, plot4, plot5,
plot6, plot8, plot9, plot10, plot12,
plot13, plot14, plot15, plot16, plot17,
plot18, plot19, plot20,
ncol = 5, nrow = 4,
top = textGrob("Subjectivity of the Tweets Posted by Institutional Accounts (in Percentage)", gp = gpar(fontsize = 20)))
g <- arrangeGrob(plot1, plot2, plot3, plot4, plot5,
plot6, plot8, plot9, plot10, plot12,
plot13, plot14, plot15, plot16, plot17,
plot18, plot19, plot20,
ncol = 5, nrow = 4)
graph_indi <- function(rank, hostpial_name){
filename <- paste('./sent_processed_data/indi_tweets_', toString(rank), '.csv', sep = '')
data <- read.csv(file = filename, header = TRUE, sep = ',')
plot <- ggplot(data, aes(x = Objectivity, fill = Objectivity)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
labs(title = hostpial_name, x = 'Objectivity', y = 'Percentage') +
theme(plot.title = element_text(size = 9, face = 'bold'),
axis.title.x = element_blank()) +
guides(fill = FALSE) +
scale_y_continuous(limits = c(0.0, 0.8)) +
scale_fill_manual(values=c("#007078", "#AB0032"))
return(plot)
}
plot1 <- graph_indi(1, '#1 Mayo Clinic, Rochester, Minn.')
plot2 <- graph_indi(2, '#2 Cleveland Clinic') + theme(axis.title.y = element_blank())
plot3 <- graph_indi(3, '#3 Johns Hopkins Hospital, Baltimore') + theme(axis.title.y = element_blank())
plot4 <- graph_indi(4, '#4 Massachusetts General Hospital, \n Boston') + theme(axis.title.y = element_blank())
plot5 <- graph_indi(5, '#5 UCSF Medical Center, San \n Francisco') + theme(axis.title.y = element_blank())
plot6 <- graph_indi(6, '#6 University of Michigan \n Hospitals and Health Centers, \n Ann Arbor')
plot7 <- graph_indi(7, '#7 Ronald Reagan UCLA Medical \n Center, Los Angeles') + theme(axis.title.y = element_blank())
plot9 <- graph_indi(9, '#9 Stanford Health Care-Stanford \n Hospital, Stanford, Calif.') + theme(axis.title.y = element_blank())
plot10 <- graph_indi(10, '#10 Hospitals of the University of \n Pennsylvania-Penn Presbyterian, \n Philadelphia') + theme(axis.title.y = element_blank())
plot11 <- graph_indi(11, '#11 Cedars-Sinai Medical Center, \n Los Angeles') + theme(axis.title.y = element_blank())
plot12 <- graph_indi(12, '#12 Barnes-Jewish Hospital, \n St. Louis')
plot14 <- graph_indi(14, '#14 UPMC Presbyterian Shadyside, \n Pittsburgh') + theme(axis.title.y = element_blank())
plot15 <- graph_indi(15, '#15 University of Colorado Hospital, \n Aurora') + theme(axis.title.y = element_blank())
plot16 <- graph_indi(16, '#16 Thomas Jefferson University \n Hospitals, Philadelphia') + theme(axis.title.y = element_blank())
plot17 <- graph_indi(17, '#17 Duke University Hospital, \n Durham, N.C.') + theme(axis.title.y = element_blank())
plot18 <- graph_indi(18, '#18 Mount Sinai Hospital, \n New York')
plot19 <- graph_indi(19, '#19 NYU Langone Medical Center, \n New York') + theme(axis.title.y = element_blank())
plot20 <- graph_indi(20, '#20 Mayo Clinic Phoenix') + theme(axis.title.y = element_blank())
grid.arrange(plot1, plot2, plot3, plot4, plot5,
plot6, plot7, plot9, plot10, plot11,
plot12, plot14, plot15, plot16, plot17,
plot18, plot19, plot20,
ncol = 5, nrow = 4,
top = textGrob("Subjectivity of the Tweets Posted by Individual Accounts (in Percentage)", gp = gpar(fontsize = 20)))
g <- arrangeGrob(plot1, plot2, plot3, plot4, plot5,
plot6, plot7, plot9, plot10, plot11,
plot12, plot14, plot15, plot16, plot17,
plot18, plot19, plot20,
ncol = 5, nrow = 4)
